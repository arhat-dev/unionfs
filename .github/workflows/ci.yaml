name: CI

# yamllint disable-line rule:truthy
on:
  check_run:
    types:
    - rerequested
    - requested_action
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
    tags:
    - v*

env:
  GO111MODULE: "on"

defaults:
  run:
    shell: bash

jobs:
  unit-test:
    strategy:
      fail-fast: false
      matrix:
        go:
        - 1.15.x
        - 1.16.x
        os:
        - macos-latest
        - windows-latest
        - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - uses: arhat-dev/actions-setup-dukkha@master

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Ensure tidy gomod
      run: |
        go mod download -x
        go mod tidy
        if ! git diff --exit-code; then
          echo "go mod not tidy"
          exit 1
        fi

    - name: Lint
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        make lint.all

    - name: Unit Tests
      run: |
        dukkha golang local test templatelibrarygo

    - uses: sonarsource/sonarqube-scan-action@v1.0.0
      # TODO: the sonarqube-scan-action uses container, only supported on
      #       linux platforms
      if: ${{ matrix.os == 'ubuntu-latest' }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # fuzz:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Install Go
  #     uses: actions/setup-go@v2
  #     with:
  #       # there are some issues for fuzz test with go1.15
  #       go-version: 1.14.x

  #   - name: Fuzz Tests
  #     run: |
  #       make install.fuzz
  #       make test.fuzz
